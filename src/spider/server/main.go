package main

import (
    "fmt"
    "os"
    "context"
    "github.com/apache/thrift/lib/go/thrift"
    "gen-go/spider/bks" // Import interface package generated by Thrift
)

const (
    NetworkAddr = "127.0.0.1:9090"
)

type BksService struct{}

func (this *BksService) GetClassTable(ctx context.Context, xn string, xq string, stuid string, password string) (r string, err error)  {
    fmt.Println("GetClassTable-->from client Call:", xn,xq,stuid,password)
    r = "this is getClassTable"
    return
}

func (this *BksService) GetGrade(ctx context.Context, xn string, xq string, stuid string, password string) (r string, err error)  {
    fmt.Printf("GetGrade--->id: %d\tTitle:%s\tContent:%s\tAuthor:%s\n", xn,xq,stuid,password)
    r = "this is GetGrade"
    return
}

func main() {
    transportFactory := thrift.NewTFramedTransportFactory(thrift.NewTTransportFactory())
    protocolFactory := thrift.NewTBinaryProtocolFactoryDefault()
    serverTransport, err := thrift.NewTServerSocket(NetworkAddr)
    if err != nil {
        fmt.Println("Error!", err)
        os.Exit(1)
    }

    handler := &BksService{}
    processor := bks.NewBksProcessor(handler)

    server := thrift.NewTSimpleServer4(processor, serverTransport, transportFactory, protocolFactory)
    fmt.Println("thrift server in", NetworkAddr)
    server.Serve()
}